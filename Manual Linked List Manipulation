class LinkedList {

    class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    int size = 0;
    Node head;

    
    public void addFirst(int data) {
        Node newNode = new Node(data);
        newNode.next = head;
        head = newNode;
        size++;
    }

    
    public void addLast(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
        } else {
            Node curr = head;
            while (curr.next != null) {
                curr = curr.next;
            }
            curr.next = newNode;
        }
        size++;
    }

    public void removeFirst() {
        if (head == null) {
            System.out.println("The list is empty");
            return;
        }
        head = head.next;
        size--;
    }

    
    public void removeLast() {
        if (head == null) {
            System.out.println("The list is empty");
            return;
        }
        if (head.next == null) {
            head = null;
            size--;
            return;
        }
        Node curr = head;
        while (curr.next.next != null) {
            curr = curr.next;
        }
        curr.next = null;
        size--;
    }


    public void printList() {
        if (head == null) {
            System.out.println("The list is empty");
            return;
        }
        Node curr = head;
        while (curr != null) {
            System.out.println(curr.data);
            curr = curr.next;
        }
    }
}
class Main { public static void main(String[] args)
{
    LinkedList operator= new LinkedList();
    operator.printList(); 
    operator.addFirst(5);
    operator.addFirst(5); 
    operator.printList(); } 
    
}
